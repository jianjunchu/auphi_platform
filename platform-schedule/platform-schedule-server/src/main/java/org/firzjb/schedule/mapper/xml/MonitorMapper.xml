<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.firzjb.schedule.mapper.MonitorMapper">


    <select id="findList"  resultType="org.firzjb.schedule.entity.Monitor">
        SELECT
            a.ID AS id,
            a.QRTZ_JOB_NAME AS qrtzJobName,
            a.QRTZ_JOB_GROUP AS qrtzJobGroup,
            gp.GROUP_NAME AS qrtzJobGroupName,
            a.STARTDATE AS startdate,
            a.ENDDATE AS enddate,
            a.STATUS AS status,
            a.ERRORS AS errors,
            a.FILE_TYPE AS fileType
        FROM (
          SELECT
            LOG_TRANS_ID AS ID,
            QRTZ_JOB_NAME,
            QRTZ_JOB_GROUP,
            STARTDATE,
            ENDDATE,
            STATUS,
            ERRORS,
            "TRANSFORMATION" AS FILE_TYPE
          FROM LOG_TRANS
            UNION
          SELECT
            LOG_JOB_ID AS ID,
            QRTZ_JOB_NAME,
            QRTZ_JOB_GROUP,
            STARTDATE,
            ENDDATE,
            STATUS,
            ERRORS,
            "JOB" AS FILE_TYPE
          FROM LOG_JOB
        ) a

          join QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a.QRTZ_JOB_GROUP


        <where>

            <if test="organizerId != null ">
                AND gp.ORGANIZER_ID = #{organizerId}
            </if>

            <if test="qrtzJobGroup != null and qrtzJobGroup!='' ">
                AND  a.QRTZ_JOB_GROUP = #{qrtzJobGroup}
            </if>

            <if test="qrtzJobName != null and qrtzJobName!='' ">
                AND  a.QRTZ_JOB_NAME  like '%${qrtzJobName}%'
            </if>

			<if test="status != null and status!='' ">
				AND  a.STATUS  = #{status}
			</if>

			<if test="searchtime == 'start' ">
				AND  (a.STARTDATE between #{startTime} and #{endTime})
			</if>

			<if test="searchtime == 'end' ">
				AND  (a.ENDDATE between #{startTime} and #{endTime})
			</if>

        </where>
    </select>


	<select id="findPlanMonitor"  resultType="org.firzjb.schedule.entity.Monitor">
		SELECT
		a.ID AS id,
		a.QRTZ_JOB_NAME AS qrtzJobName,
		a.QRTZ_JOB_GROUP AS qrtzJobGroup,
		gp.GROUP_NAME AS qrtzJobGroupName,
		a.STARTDATE AS startdate,
		a.ENDDATE AS enddate,
		a.STATUS AS status,
		a.ERRORS AS errors,
		a.FILE_TYPE AS fileType
		FROM (
		SELECT
			LOG_TRANS_ID AS ID,
			QRTZ_JOB_NAME,
			QRTZ_JOB_GROUP,
			STARTDATE,
			ENDDATE,
			STATUS,
			ERRORS,
			"TRANSFORMATION" AS FILE_TYPE,
			FIRE_TIME
			FROM LOG_TRANS
		UNION
			SELECT
			LOG_JOB_ID AS ID,
			QRTZ_JOB_NAME,
			QRTZ_JOB_GROUP,
			STARTDATE,
			ENDDATE,
			STATUS,
			ERRORS,
			"JOB" AS FILE_TYPE,
			FIRE_TIME
			FROM LOG_JOB
		) a

		join QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a.QRTZ_JOB_GROUP

		<where>
			a.QRTZ_JOB_GROUP = #{qrtzJobGroup} AND a.QRTZ_JOB_NAME  = #{qrtzJobName}  AND  DATE_FORMAT(a.FIRE_TIME,'%Y%m%d%H%i%s') = DATE_FORMAT(#{fireTime},'%Y%m%d%H%i%s')
		</where>
	</select>

	<select id="findList"  databaseId="oracle" resultType="org.firzjb.schedule.entity.Monitor">
		SELECT
		a.ID AS id,
		a.QRTZ_JOB_NAME AS qrtzJobName,
		a.QRTZ_JOB_GROUP AS qrtzJobGroup,
		gp.GROUP_NAME AS qrtzJobGroupName,
		a.STARTDATE AS startdate,
		a.ENDDATE AS enddate,
		a.STATUS AS status,
		a.ERRORS AS errors,
		a.FILE_TYPE AS fileType
		FROM (
		SELECT
		LOG_TRANS_ID AS ID,
		QRTZ_JOB_NAME,
		QRTZ_JOB_GROUP,
		STARTDATE,
		ENDDATE,
		STATUS,
		ERRORS,
		x1.FILE_TYPE AS FILE_TYPE
		FROM LOG_TRANS,(select 'TRANSFORMATION' AS FILE_TYPE from dual ) x1
		UNION
		SELECT
		LOG_JOB_ID AS ID,
		QRTZ_JOB_NAME,
		QRTZ_JOB_GROUP,
		STARTDATE,
		ENDDATE,
		STATUS,
		ERRORS,
		x2.FILE_TYPE AS FILE_TYPE
		FROM LOG_JOB ,(select 'JOB' AS FILE_TYPE from dual ) x2
		) a

		join QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a.QRTZ_JOB_GROUP


		<where>

			<if test="organizerId != null ">
				AND gp.ORGANIZER_ID = #{organizerId}
			</if>

			<if test="qrtzJobGroup != null and qrtzJobGroup!='' ">
				AND  a.QRTZ_JOB_GROUP = #{qrtzJobGroup}
			</if>

			<if test="qrtzJobName != null and qrtzJobName!='' ">
				AND  a.QRTZ_JOB_NAME  like '%${qrtzJobName}%'
			</if>
		</where>
	</select>

    <select id="getTimeConsumingTop5" resultType="java.util.HashMap">
      	select NAME ,TIME  FROM  (
			select NAME ,TIME ,QRTZ_JOB_GROUP from (
				  select
					  CONCAT(TRANSNAME,'.ktr')  AS NAME , time_to_sec(timediff(ENDDATE,STARTDATE))  AS TIME ,QRTZ_JOB_GROUP  from  LOG_TRANS WHERE ENDDATE is not null
				  UNION ALL
				  select
					  CONCAT(JOB_NAME,'.kjb') AS NAME , time_to_sec(timediff(ENDDATE,STARTDATE))  AS TIME ,QRTZ_JOB_GROUP  from LOG_JOB WHERE ENDDATE is not null
			) a order by a.TIME
		) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}


    </select>

    <select id="getTimeConsumingTop5" databaseId="oracle" resultType="java.util.HashMap">
      	select NAME ,TIME  FROM  (
			select NAME ,TIME ,QRTZ_JOB_GROUP from (
				  select
					  CONCAT(TRANSNAME,'.ktr')  AS NAME , ROUND(TO_NUMBER(ENDDATE - STARTDATE) * 24 * 60 * 60)  AS TIME ,QRTZ_JOB_GROUP  from  LOG_TRANS WHERE ENDDATE is not null
				  UNION ALL
				  select
					  CONCAT(JOB_NAME,'.kjb') AS NAME , ROUND(TO_NUMBER(ENDDATE - STARTDATE) * 24 * 60 * 60)  AS TIME ,QRTZ_JOB_GROUP  from LOG_JOB WHERE ENDDATE is not null
			) a order by a.TIME
		) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}


    </select>

    <select id="get7DayErrorsAndFinishs" resultType="java.util.HashMap">
      select
       DATE_FORMAT(a.click_date,'%Y-%m-%d') AS DATETIME , ifnull(b.count,0)  AS FINISH , ifnull(c.count,0) AS ERROR
      from (
        SELECT curdate() as click_date
        union all
        SELECT date_sub(curdate(), interval 1 day) as click_date
        union all
        SELECT date_sub(curdate(), interval 2 day) as click_date
        union all
        SELECT date_sub(curdate(), interval 3 day) as click_date
        union all
        SELECT date_sub(curdate(), interval 4 day) as click_date
        union all
        SELECT date_sub(curdate(), interval 5 day) as click_date
        union all
        SELECT date_sub(curdate(), interval 6 day) as click_date
      ) a left join (
		SELECT datetime, count FROM(
			SELECT DATE_FORMAT(tr.STARTDATE,'%Y-%m-%d') datetime , count(1) AS  count ,QRTZ_JOB_GROUP   from  LOG_TRANS tr WHERE tr.STATUS = 'end' GROUP BY DATE_FORMAT(tr.STARTDATE,'%Y-%m-%d')  ,QRTZ_JOB_GROUP ) a1
			JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a1.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}
		UNION ALL
		SELECT datetime, count FROM(
			SELECT DATE_FORMAT(job.STARTDATE,'%Y-%m-%d') datetime , count(1) AS  count ,QRTZ_JOB_GROUP  from  LOG_JOB job WHERE job.STATUS = 'end' GROUP BY DATE_FORMAT(job.STARTDATE,'%Y-%m-%d')  , QRTZ_JOB_GROUP ) a2
		JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a2.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}
      ) b on a.click_date = b.datetime left join (
		SELECT datetime, count FROM(
			SELECT DATE_FORMAT(tr.STARTDATE,'%Y-%m-%d') datetime , sum(tr.ERRORS) AS  count ,QRTZ_JOB_GROUP from  LOG_TRANS tr  GROUP BY DATE_FORMAT(tr.STARTDATE,'%Y-%m-%d')  , QRTZ_JOB_GROUP ) b1
			JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b1.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}
			UNION ALL
		SELECT datetime, count FROM(
			SELECT DATE_FORMAT(job.STARTDATE,'%Y-%m-%d') datetime , sum(job.ERRORS) AS  count ,QRTZ_JOB_GROUP from  LOG_JOB job  GROUP BY DATE_FORMAT(job.STARTDATE,'%Y-%m-%d')  , QRTZ_JOB_GROUP) b2
			JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b2.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}

      ) c on a.click_date = c.datetime  order by a.click_date;
    </select>




    <select id="get7DayErrorsAndFinishs" databaseId="oracle" resultType="java.util.HashMap">

      SELECT a.click_date AS DATETIME,nvl(b.count,0) AS FINISH,nvl(c.count,0) AS ERROR FROM (
        SELECT to_char(TRUNC(SYSDATE),'yyyy-MM-dd') AS click_date from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-1),'yyyy-MM-dd') AS click_date from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-2),'yyyy-MM-dd') AS click_date from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-3),'yyyy-MM-dd') AS click_date from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-4),'yyyy-MM-dd') AS click_date from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-5),'yyyy-MM-dd') AS click_date  from dual UNION ALL
        SELECT to_char(TRUNC(SYSDATE-6),'yyyy-MM-dd') AS click_date from dual
    ) a
	left join (
				SELECT datetime,count FROM  (
						SELECT
								to_char(tr.STARTDATE,'yyyy-MM-dd') datetime
							,	count(1) AS count
							,QRTZ_JOB_GROUP
						FROM LOG_TRANS tr WHERE tr.STATUS='end' GROUP BY to_char(tr.STARTDATE,'yyyy-MM-dd'),QRTZ_JOB_GROUP) a1 JOIN QRTZ_GROUP gp ON gp.DEL_FLAG=0 AND gp.ID_GROUP=a1.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}
				UNION ALL
				SELECT datetime,count FROM (
						SELECT
								to_char(job.STARTDATE,'yyyy-MM-dd') datetime
							,	count(1) AS count,QRTZ_JOB_GROUP
						FROM LOG_JOB job WHERE job.STATUS='end' GROUP BY to_char(job.STARTDATE,'yyyy-MM-dd'),QRTZ_JOB_GROUP) a2 JOIN QRTZ_GROUP gp ON gp.DEL_FLAG=0 AND gp.ID_GROUP=a2.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}) b ON a.click_date=b.datetime
	left join (
		SELECT datetime,count FROM (
				SELECT to_char(tr.STARTDATE,'yyyy-MM-dd') datetime,sum(tr.ERRORS) AS count,QRTZ_JOB_GROUP
				FROM LOG_TRANS tr
				GROUP BY to_char(tr.STARTDATE,'yyyy-MM-dd'),QRTZ_JOB_GROUP) b1 JOIN QRTZ_GROUP gp ON gp.DEL_FLAG=0 AND gp.ID_GROUP=b1.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}
		UNION ALL
		SELECT datetime,count FROM (
			SELECT to_char(job.STARTDATE,'yyyy-MM-dd') datetime,sum(job.ERRORS) AS count,QRTZ_JOB_GROUP
			FROM LOG_JOB job
			GROUP BY to_char(job.STARTDATE,'yyyy-MM-dd'),QRTZ_JOB_GROUP) b2 JOIN QRTZ_GROUP gp ON gp.DEL_FLAG=0 AND gp.ID_GROUP=b2.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID = #{organizerId}) c ON a.click_date=c.datetime
    </select>

    <select id="countRuning" resultType="java.lang.Integer">
        select COUNT(*)  from (
			select NAME  ,QRTZ_JOB_GROUP from (
				  select
					  CONCAT(TRANSNAME,'.ktr')  AS NAME ,QRTZ_JOB_GROUP  from  LOG_TRANS WHERE STATUS = 'start'
				  UNION ALL
				  select
					  CONCAT(JOB_NAME,'.kjb') AS NAME ,QRTZ_JOB_GROUP  from LOG_JOB WHERE STATUS = 'start'
			) a
		) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID =  #{organizerId}
    </select>

    <select id="countFinish" resultType="java.lang.Integer">
		select COUNT(*)  from (
			select NAME  ,QRTZ_JOB_GROUP from (
				  select
					  CONCAT(TRANSNAME,'.ktr')  AS NAME ,QRTZ_JOB_GROUP  from  LOG_TRANS WHERE STATUS = 'end'
				  UNION ALL
				  select
					  CONCAT(JOB_NAME,'.kjb') AS NAME ,QRTZ_JOB_GROUP  from LOG_JOB WHERE STATUS = 'end'
			) a
		) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID =  #{organizerId}
    </select>



    <select id="countError"  resultType="java.lang.Integer">

		select  ifnull(sum(COUNT),0) AS COUNT FROM (
		    select COUNT
			  from (
			    select ifnull(sum(ERRORS),0)  AS COUNT , QRTZ_JOB_GROUP
			    from  LOG_TRANS GROUP BY QRTZ_JOB_GROUP
			  )a JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID  = #{organizerId}

				UNION ALL

				select COUNT
			  from (
			    select ifnull(sum(ERRORS),0)   AS COUNT , QRTZ_JOB_GROUP
			    from  LOG_JOB GROUP BY QRTZ_JOB_GROUP
			  ) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID  = #{organizerId}
		) d
    </select>

    <select id="countError" databaseId="oracle"  resultType="java.lang.Integer">

		select  nvl(sum(COUNT),0) AS COUNT FROM (
		    select COUNT
			  from (
			    select nvl(sum(ERRORS),0)  AS COUNT , QRTZ_JOB_GROUP
			    from  LOG_TRANS GROUP BY QRTZ_JOB_GROUP
			  )a JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = a.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID  = #{organizerId}

				UNION ALL

				select COUNT
			  from (
			    select nvl(sum(ERRORS),0)   AS COUNT , QRTZ_JOB_GROUP
			    from  LOG_JOB GROUP BY QRTZ_JOB_GROUP
			  ) b JOIN  QRTZ_GROUP gp on gp.DEL_FLAG =0 and gp.ID_GROUP = b.QRTZ_JOB_GROUP WHERE gp.ORGANIZER_ID  = #{organizerId}
		) d
    </select>

</mapper>
