<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 角色管理与授权手工映射SQL语句 -->
<mapper namespace="Job">




	<select id="queryJob" parameterType="map" resultType="dto">
		select
		taskId,name,createDate,modifiedUser, modifiedDate,type from (select
		ID_JOB as taskId,name,Created_date as createDate,MODIFIED_USER as
		modifiedUser,MODIFIED_DATE as modifiedDate,0 as type from R_JOB
		union
		all
		SELECT ID_TRANSFORMATION as taskId,name,Created_date as createDate,MODIFIED_USER as
		modifiedUser,MODIFIED_DATE as modifiedDate,1 as type FROM
		R_TRANSFORMATION
		) as t limit ${start},${end}
	</select>

	<select id="queryJobCount" parameterType="map" resultType="java.lang.Integer">
		select count(name) from (select
		ID_JOB as taskId,name,Created_date as createDate,MODIFIED_USER as
		modifiedUser,MODIFIED_DATE as modifiedDate,0 as type from R_JOB
		union
		all
		SELECT ID_TRANSFORMATION as taskId,name,Created_date as createDate,MODIFIED_USER as
		modifiedUser,MODIFIED_DATE as modifiedDate,1 as type FROM
		R_TRANSFORMATION
		) as t
	</select>


	<select id="getSlaveHosts" resultType="dto">
		select name,host_name,port
		from R_SLAVE
	</select>

	<insert id="insertTransLog">
	 	<selectKey keyProperty="TRANS_ID" resultType="java.lang.String">
            select LAST_INSERT_ID()
        </selectKey>
		insert into T_TRANS_LOG
		(TRANS_CONFIG_ID,CHANNEL_ID,TRANSNAME,STATUS,LINES_READ,LINES_WRITTEN,LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,
		LINES_REJECTED,ERRORS,STARTDATE,ENDDATE,LOGDATE,DEPDATE,REPLAYDATE,LOG_FIELD,EXECUTING_SERVER,EXECUTING_USER,
		EXCUTOR_TYPE,LOGINFO,TRANS_CN_NAME)
		values
		(
		#{TRANS_CONFIG_ID},
		#{CHANNEL_ID},
		#{TRANSNAME},
		#{STATUS},
		#{LINES_READ},
		#{LINES_WRITTEN},
		#{LINES_UPDATED},
		#{LINES_INPUT},
		#{LINES_OUTPUT},
		#{LINES_REJECTED},
		#{ERRORS},
		#{STARTDATE},
		#{ENDDATE},
		#{LOGDATE},
		#{DEPDATE},
		#{REPLAYDATE},
		#{LOG_FIELD},
		#{EXECUTING_SERVER},
		#{EXECUTING_USER},
		#{EXCUTOR_TYPE},
		#{LOGINFO},
		#{TRANS_CN_NAME}
		)
	</insert>
	
	<insert id="insertTransSetpLog">
	 	insert into T_TRANS_STEP_LOG
		(TRANS_ID,CHANNEL_ID,LOG_DATE,TRANSNAME,STEPNAME,STEP_COPY,LINES_READ,LINES_WRITTEN,LINES_UPDATED,
		LINES_INPUT,LINES_OUTPUT,LINES_REJECTED,ERRORS,SETP_LOG,COSTTIME,SPEED,STATUS)
		values
		(
		#{TRANS_ID},
		#{CHANNEL_ID},
		#{LOG_DATE},
		#{TRANSNAME},
		#{STEPNAME},
		#{STEP_COPY},
		#{LINES_READ},
		#{LINES_WRITTEN},
		#{LINES_UPDATED},
		#{LINES_INPUT},
		#{LINES_OUTPUT},
		#{LINES_REJECTED},
		#{ERRORS},
		#{SETP_LOG},
		#{COSTTIME},
		#{SPEED},
		#{STATUS}
		)
	</insert>
	
	
	
	<insert id="insertJobLog">
		<selectKey keyProperty="JOB_ID" resultType="java.lang.String">
            select LAST_INSERT_ID()
        </selectKey>
        insert into T_JOB_LOG (JOB_CONFIG_ID,CHANNEL_ID,JOB_NAME,JOB_CN_NAME,STATUS,LINES_READ ,LINES_WRITTEN,
        LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,LINES_REJECTED ,ERRORS,STARTDATE,
        ENDDATE,LOGDATE,DEPDATE,REPLAYDATE,LOG_FIELD,EXECUTING_SERVER,EXECUTING_USER,EXCUTOR_TYPE ,JOB_LOG) 
        values (
        #{JOB_CONFIG_ID},
        #{CHANNEL_ID},
        #{JOB_NAME},
        #{JOB_CN_NAME},
        #{STATUS},
        #{LINES_READ},
        #{LINES_WRITTEN},
        #{LINES_UPDATED},
        #{LINES_INPUT},
        #{LINES_OUTPUT},
        #{LINES_REJECTED},
        #{ERRORS},
        #{STARTDATE},
        #{ENDDATE},
        #{LOGDATE},
        #{DEPDATE},
        #{REPLAYDATE},
        #{LOG_FIELD},
        #{EXECUTING_SERVER},
        #{EXECUTING_USER},
        #{EXCUTOR_TYPE},
        #{JOB_LOG})
	</insert>

	<insert id="insertJobSetpLog">
        insert into T_JOB_LOG (JOB_ID,CHANNEL_ID,LOG_DATE,JOBNAME,STEPNAME,LINES_READ,LINES_WRITTEN,
        LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,
        LINES_REJECTED,ERRORS,RESULT,NR_RESULT_ROWS,NR_RESULT_FILES,LOG_FIELD,COPY_NR,SETP_LOG) 
        values (
        #{JOB_ID},
        #{CHANNEL_ID},
        #{LOG_DATE},
        #{JOBNAME},
        #{STEPNAME},
        #{LINES_READ},
        #{LINES_WRITTEN},
        #{LINES_UPDATED},
        #{LINES_INPUT},
        #{LINES_OUTPUT},
        #{LINES_REJECTED},
        #{ERRORS},
        #{RESULT},
        #{NR_RESULT_ROWS},
        #{NR_RESULT_FILES},
        #{COPY_NR},
        #{SETP_LOG})
	</insert>


	<select id="queryTransMonitorList" parameterType="map" resultType="dto">
		select TRANS_ID,TRANS_CONFIG_ID,CHANNEL_ID,TRANSNAME,STATUS,LINES_READ,LINES_WRITTEN,LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,
		LINES_REJECTED,ERRORS,STARTDATE,ENDDATE,LOGDATE,DEPDATE,REPLAYDATE,LOG_FIELD,EXECUTING_SERVER,EXECUTING_USER,
		EXCUTOR_TYPE,TRANS_CN_NAME from T_TRANS_LOG order by startdate desc limit ${start},${end}
	</select>
	
	<select id="queryTransMonitorListCount" parameterType="map" resultType="java.lang.Integer">
		select count(TRANS_CONFIG_ID) from T_TRANS_LOG order by startdate desc
	</select>
	
	<select id="selectTransLogInfo"  parameterType="map" resultType="java.lang.String">
		select LOGINFO from T_TRANS_LOG where TRANS_ID=#{transId}
	</select>
	
		
	<select id="selectTransSetpList"  parameterType="map" resultType="dto">
		select TRANS_ID,CHANNEL_ID,LOG_DATE,TRANSNAME,STEPNAME,STEP_COPY,LINES_READ,LINES_WRITTEN,LINES_UPDATED,
		LINES_INPUT,LINES_OUTPUT,LINES_REJECTED,ERRORS,COSTTIME,SPEED,STATUS from T_TRANS_STEP_LOG where TRANS_ID=#{transId}
	</select>
	


	<select id="queryJobMonitorList" parameterType="map" resultType="dto">
		select JOB_ID,JOB_CONFIG_ID,CHANNEL_ID,JOB_NAME,JOB_CN_NAME,STATUS,LINES_READ ,LINES_WRITTEN,
		LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,LINES_REJECTED ,ERRORS,STARTDATE,ENDDATE,LOGDATE,DEPDATE,
		REPLAYDATE,LOG_FIELD,EXECUTING_SERVER,EXECUTING_USER,EXCUTOR_TYPE 
		 from T_JOB_LOG order by startdate desc limit ${start},${end}
	</select>
	
	<select id="queryJobMonitorListCount" parameterType="map" resultType="java.lang.Integer">
		select count(*) from T_JOB_LOG order by startdate desc
	</select>
	
	<select id="selectJobLogInfo"  parameterType="map" resultType="java.lang.String">
		select JOB_LOG from T_JOB_LOG where JOb_ID=#{jobId}
	</select>
	
		
	<select id="selectJobSetpList"  parameterType="map" resultType="dto">
		select JOB_ID,CHANNEL_ID,LOG_DATE,JOBNAME,STEPNAME,LINES_READ,LINES_WRITTEN,
        LINES_UPDATED,LINES_INPUT,LINES_OUTPUT,
        LINES_REJECTED,ERRORS,RESULT,NR_RESULT_ROWS,NR_RESULT_FILES,LOG_FIELD,COPY_NR from T_JOB_STEP_LOG where JOb_ID=#{jobId}
	</select>
	
	
	<!-- 插入quartz定时任务执行信息数据 -->
	<insert id="insertQuartzTask">
		insert into T_QUARTZ_TASK (TASK_CN_NAME,TRIGGER_NAME,TASK_TYPE,TASK_CONFIG_ID,TASK_NAME,TASK_SLAVE_SERVER,TASK_PARAMS,RUNTYPE,SCHEDULETYPE)
		values ( 
		#{TASK_CN_NAME},
		#{TRIGGER_NAME},
		#{TASK_TYPE},
		#{TASK_CONFIG_ID},
		#{TASK_NAME},
		#{TASK_SLAVE_SERVER},
		#{TASK_PARAMS},
		#{RUNTYPE},
		#{SCHEDULETYPE})
	</insert>

	<select id="selectQuartzTaskByTriggerName" parameterType="map" resultType="dto">
		select TASK_ID,TASK_CN_NAME,TRIGGER_NAME,TASK_TYPE,TASK_CONFIG_ID,TASK_NAME,TASK_SLAVE_SERVER,TASK_PARAMS,RUNTYPE,SCHEDULETYPE
		 	from T_QUARTZ_TASK where TRIGGER_NAME=#{triggerName}
	</select>
	
	
	<select id="selectTriggerList" parameterType="map" resultType="dto">
		select 
		b.TRIGGER_NAME,b.TRIGGER_GROUP,b.JOB_NAME,b.JOB_GROUP,b.IS_VOLATILE,b.DESCRIPTION,b.NEXT_FIRE_TIME,b.PREV_FIRE_TIME,b.TRIGGER_STATE,
		b.TRIGGER_TYPE,b.START_TIME,b.END_TIME,b.CALENDAR_NAME,b.MISFIRE_INSTR,a.TASK_CN_NAME,a.TASK_TYPE,a.TASK_NAME from T_QUARTZ_TASK a,QRTZ_TRIGGERS b
		where a.TRIGGER_NAME=b.TRIGGER_NAME limit ${start},${end}
	</select>
	
	<select id="selectTriggerListCount" parameterType="map" resultType="java.lang.Integer">
		select count(b.TRIGGER_NAME) from T_QUARTZ_TASK a,QRTZ_TRIGGERS b
		where a.TRIGGER_NAME=b.TRIGGER_NAME
	</select>
	
	
	<select id="queryAllTrans" parameterType="map" resultType="dto">
		select ID_TRANSFORMATION as taskId,name,2 as type from R_TRANSFORMATION
	</select>
	
	<select id="queryAllJob" parameterType="map" resultType="dto">
		select ID_JOB as taskId,name,1 as type from R_JOB
	</select>
	
</mapper>